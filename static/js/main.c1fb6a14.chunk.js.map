{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","result","setResult","handler","e","target","value","type","onChange","onClick","eval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y2BAIA,SAASA,MAEP,cAAwBC,oDAAS,IAAjC,iLAAOC,MAAP,cAAcC,SAAd,cACA,WAA0BF,oDAAS,GAAnC,kLAAOG,OAAP,cAAeC,UAAf,cAEMC,QAAU,SAAAC,GAEdJ,SAASI,EAAEC,OAAOC,QAIpB,OACE,6EACE,8FAEN,oEAAOC,KAAK,OAAOC,SAAUL,QAASG,MAAOP,QAC7C,oEAAK,oEAED,qEAAQU,QAAS,0BAAMP,UAAUQ,KAAKX,SAAtC,wBACA,+FAAqBE,UAGzB,qEAAQQ,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBAAwD,oEACxD,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBAAwD,oEACxD,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBAEA,qEAAQU,QAAS,kBAAMT,SAASD,MAAM,MAAtC,iBACA,qEAAQU,QAAS,kBAAMT,SAAS,KAAhC,sBAgBeH,2B,+BCzDf,yDAMAc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1fb6a14.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nfunction App(){\n\n  const [input, setInput]=useState(\"\")\n  const [result, setResult]=useState(0)\n\n  const handler = e =>{\n\n    setInput(e.target.value)\n  }\n\n \n  return(\n    <div>\n      <h1>Calculator App </h1>\n\n<input type=\"text\" onChange={handler} value={input} />\n<br/><br/>\n\n    <button onClick={() => setResult(eval(input))}>Get Result</button> \n    <h3>The result is : {result}</h3>\n    \n\n<button onClick={() => setInput(input+'1')}> 1 </button>\n<button onClick={() => setInput(input+'2')}> 2 </button>\n<button onClick={() => setInput(input+'3')}> 3 </button>\n<button onClick={() => setInput(input+'4')}> 4 </button>\n<button onClick={() => setInput(input+'5')}> 5 </button><br/>\n<button onClick={() => setInput(input+'6')}> 6 </button>\n<button onClick={() => setInput(input+'7')}> 7 </button>\n<button onClick={() => setInput(input+'8')}> 8 </button>\n<button onClick={() => setInput(input+'9')}> 9 </button>\n<button onClick={() => setInput(input+'0')}> 0 </button><br/>\n<button onClick={() => setInput(input+'+')}> + </button>\n<button onClick={() => setInput(input+'-')}> - </button>\n<button onClick={() => setInput(input+'*')}> * </button>\n\n<button onClick={() => setInput(input+'/')}> / </button>\n<button onClick={() => setInput('')}> Clr </button>\n\n\n\n</div>\n   \n\n\n\n  );\n\n}\n  \n\n\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}